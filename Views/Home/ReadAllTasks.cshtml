@model IEnumerable<TaskManagementSystem.Models.TaskModel>
@{
    Layout = "_SecondLayout";
}

<!-- Toastr -->
<link rel="stylesheet" href="~/plugins/toastr/toastr.min.css">
<link href="~/css/dropdown.css" rel="stylesheet" />
<script src="~/js/dropdown.js"></script>
<script src="~/js/updatemodalview.js"></script>
@* <a class="btn btn-primary" asp-action="CreateTask" asp-controller="Home">Add a New Task</a> *@
<div class=""
<!-- Drop-down Filters -->
<div class="d-flex justify-content-between align-items-center p-3 bg-light border">
    <!-- Left: Dropdown Menu -->
    <div class="dropdown">
        <button class="btn btn-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
            Filter
        </button>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <!-- First Level Submenu -->
            <li class="dropdown-submenu">
                <a class="dropdown-item submenu-toggle" href="#">Status &raquo;</a>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item filter-option" data-type="status" href="#">Pending</a></li>
                    <li><a class="dropdown-item filter-option" data-type="status" href="#">InProgress</a></li>
                    <li><a class="dropdown-item filter-option" data-type="status" href="#">Completed</a></li>
                </ul>
            </li>
            <li class="dropdown-submenu">
                <a class="dropdown-item submenu-toggle" href="#">Priority &raquo;</a>
                <ul class="dropdown-menu">
                    <li><a class="dropdown-item filter-option" data-type="priority" href="#">High</a></li>
                    <li><a class="dropdown-item filter-option" data-type="priority" href="#">Medium</a></li>
                    <li><a class="dropdown-item filter-option" data-type="priority" href="#">Low</a></li>
                </ul>
            </li>
            <li><a class="dropdown-item" id="searchTrigger" href="#">Search</a></li>
        </ul>
    </div>

    <!-- Search Bar (Initially Hidden) -->
    <div id="searchContainer" style="display: none; margin-top: 10px;">
        <input type="text" id="searchInput" class="form-control" placeholder="Search by Title or Assigned To...">
    </div>

    <!-- Show All Button (Initially Hidden) -->
    <button id="showAllBtn" class="btn btn-secondary" style="display: none;">Show All Data</button>

    <!-- Right: Add Task Button -->
    <div class="d-flex justify-content-between">
        @* <a class="btn btn-success" style="float: left; margin-right: 20px;" asp-action="ShowCompleteTask" asp-controller="Home">Complete Task</a> *@
        <a class="btn btn-primary" asp-action="CreateTask" asp-controller="Home">Add a New Task</a>
    </div>
</div>


<!-- Table -->
<table class="table table-bordered mt-3" id="taskTable">
    <thead>
        <tr>
            <th>Id</th>
            <th>Title</th>
            <th>Description</th>
            <th>Created On</th>
            <th id="sortDueDate" style="cursor: pointer;">Due Date &uarr;</th>
            <th>Status</th>
            <th>Priority</th>
            @* <th>AssignedDate</th> *@
            <th>AssignedTo</th> 
            <th>Action</th>

        </tr>
    </thead>
    <tbody class="text-auto">

        @{
            var a = 0;
            foreach (var i in Model)
            {
                a++;
                <tr data-taskid="@i.Id">
                    <td>@a</td>
                    <td>@i.Title</td>
                    <td>@i.Description</td>
                    <td>@i.CreatedDate</td>
                    <td>@i.DueDate</td>
                    <td>
                        @{
                            if (i.Status == "InProgress")
                            {
                                <a class="btn btn-warning">@i.Status</a>
                            }
                            else if (i.Status == "Completed")
                            {
                                <a class="btn btn-success">@i.Status</a>
                            }
                            else
                            {
                                <a class="btn btn-outline-primary">@i.Status</a>
                            }
                        }
                    </td>
                    <td>
                        @{
                            if (i.Priority == "High")
                            {
                                <a class="btn btn-danger">@i.Priority</a>
                            }
                            else if (i.Priority == "Medium")
                            {
                                <a class="btn btn-warning">@i.Priority</a>
                            }
                            else
                            {
                                <a class="btn btn-outline-info">@i.Priority</a>
                            }
                        }
                    </td>
                    @*<td>@i.AssignedDate</td>*@
                    @*<td>@i.AssignedTo.FirstName @i.AssignedTo.LastName</td>*@
                    <td>
                    @{
                            if (i.DueDate <= DateTime.Now)
                            {
                                <span>Not Assigned</span>
                            }
                            else
                            {
                                var isAssigned = i.AssignedTo != null;
                                if (isAssigned)
                                {
                                    <span>@i.AssignedTo.FirstName @i.AssignedTo.LastName</span>
                                }
                                else
                                {
                                    <select class="form-control ddlEmployee" name="user_id" data-userid="@i.AssignedTo" required>
                                        <option value="">Not Assigned</option>
                                    </select>
                                }
                            }
                    }
                    </td>

                    <td class="project-actions">
                        <a href="javascript:void(0);" class="btn btn-primary btn-sm" data-id="@i.Id" onclick="loadTaskProgress(this)">
                            <i class="fas fa-folder"></i> View
                        </a>
                        @{
                            if (i.DueDate <= DateTime.Now)
                            {
                                if(i.Status=="Completed")
                                {
                                    <a class="btn btn-outline-success btn-sm edit-disabled toastssuccess" data-status="@i.Status">
                                        <i class="fas fa-check">
                                        </i> Updated
                                    </a>
                                }
                                else
                                {
                                    <a class="btn btn-outline-danger btn-sm edit-disabled toastserror" data-status="@i.Status">
                                        <i class="fas fa-close">
                                        </i> Expired
                                    </a>
                                }
                                
                            }
                            else if (User.IsInRole("Admin"))
                            {
                                if (i.Status == "Pending")
                                {
                                    <a class="btn btn-info btn-sm" asp-action="EditTask" asp-controller="Home" asp-route-id="@i.Id">
                                            <i class="fas fa-pencil-alt">
                                            </i> Update
                                    </a>
                                }
                                else
                                {
                                    <a class="btn btn-outline-info btn-sm edit-disabled toastsinfo">
                                        <i class="fas fa-check">
                                        </i> Updated
                                    </a>
                                }
                            }
                        }
                        <a class="btn btn-danger btn-sm delete-task" asp-action="DeleteTask" asp-controller="Home" asp-route-id="@i.Id">
                            <i class="fas fa-trash">
                            </i>
                            Delete
                        </a>
                    </td>
                </tr>
            }
            
        }
    </tbody>
</table>

<!-- View User's Task Report or History' -->
<div class="modal fade" id="taskProgressModal" tabindex="-1" aria-labelledby="taskProgressModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Task Progress Details</h5>
                <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Update Date</th>
                            <th>Status</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody id="taskProgressTableBody">
                        <!-- Data will be inserted here dynamically -->
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        fillEmp();

        // When a user is selected from the dropdown
        $(document).on("change", ".ddlEmployee", function () {
            var dropdown = $(this);
            var taskId = dropdown.closest("tr").data("taskid"); // Get Task ID from row
            var user_id = dropdown.val(); // Get selected user ID

            console.log("Task ID:", taskId, "Selected User ID:", user_id);

            $.ajax({
                url: "/Home/UpdateAssignedUser",
                type: "POST",
                data: { taskId: taskId, user_id: user_id },
                success: function (response) {
                    if (response.success) {
                        alert("Task updated successfully!");
                    } else {
                        alert("Error updating task.");
                    }
                },
                error: function () {
                    alert("Something went wrong.");
                }
            });
        });
    });

    function fillEmp() {
        $.get("/Home/GetEmployee", function (response) {
            console.log("Employee List:", response);

            $(".ddlEmployee").each(function () {
                var dropdown = $(this);
                var assignedUserId = dropdown.data("userid"); // Get assigned user ID
                var ddlOptions = "<option value=''>Not Assigned</option>";

                response.forEach(function (row) {
                    ddlOptions += `<option value='${row.id}' ${row.id == assignedUserId ? "selected" : ""}>${row.firstName}</option>`;
                });

                dropdown.html(ddlOptions);
            });
        });
    }
</script>


<script type="text/javascript">

    $(document).ready(function () {

        $('.toastserror').click(function() {
                 toastr.error('You can not update because it is Expired !!!', 'Task Expired');
        });
        $('.toastsinfo').click(function() {
                 toastr.info('You can not update because it is In progress !!!', 'Task In Progress');
        });
        $('.toastswarning').click(function() {
                 toastr.warning('It is now in demo mode You can not update because it is In progress !!!', 'Task InProgress');
        });
        $('.toastssuccess').click(function() {
                 toastr.success('You can not update because it is already completed Successfully !!!', 'Task Completed');
        });

        // $('.toastsupdatedanger').click(function() {
        //      $(document).Toasts('create', {
        //          class: 'bg-danger',
        //          title: 'Toast Title',
        //          subtitle: 'Subtitle',
        //          body: 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr.'
        //      })
        //   });

        // Delete Confirmation Alert
        $(".delete-task").click(function (e) {
            e.preventDefault();
            var taskId = $(this).data("taskid");
            if (confirm("Are you sure you want to delete this task?")) {
                $.post("/Home/DeleteTask", { id: taskId }, function (response) {
                    if (response.success) {
                        toastr.success("Task deleted successfully.");
                        location.reload();
                    } else {
                        toastr.error("Error deleting task.");
                    }
                });
            }
        });
    });
</script>



